# -*- coding: utf-8 -*-
"""day_11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1575jYP4Ys1tOwc--9wCx60k--gGXFY8L
"""

#Declare a function add_two_numbers. It takes two parameters and it returns a sum.

def add_num(a,b):#function for addition
    sum=a+b;
    return sum; #return value
num1=int(input("input the number one: "))#input from user for num1
num2=int(input("input the number one :"))#input from user for num2
print("The sum is",add_num(num1,num2))#call te function

#Write a function that calculates area_of_circle.
import math  
  
def area_of_the_circle (Radius):   
    area = Radius** 2 * math.pi  
    return area  
  
Radius = float (input ("Please enter the radius of the given circle: "))  
print (" The area of the given circle is: ", area_of_the_circle (Radius))

#Write a function called add_all_nums which takes arbitrary number of arguments and sums all the arguments. Check if all the list items are number types. If not do give a reasonable feedback.

def sum_function(*numbers):
    total = 0
    for i in numbers:
        total += i

    return total
    
print(sum_function(1,2,3,4,5))

#Write a function called check-season, it takes a month parameter and returns the season: Autumn, Winter, Spring or Summer.

def get_season(month):
    msg1 = "Spring"
    msg2 = "Summer"
    msg3 = "Autumn"
    msg4 = "Winter"
    msg5 = "Undefined - invalid month"
    msg = ""
     
    if month == "September" or "October" or "November":
        msg = msg1
    elif month == "December" or "January" or "February":
        msg = msg2
    elif month == "March" or "April" or "May":
        msg = msg3
    elif month == "June" or "July" or "May":
        msg = msg4
    else:
        msg = msg5
         
    return msg

#Write a function called calculate_slope which return the slope of a linear equation

def slope(x1, y1, x2, y2):
  s = (y2-y1)/(x2-x1)
  return s

print (slope(80,240,90,260))

#Declare a function named print_list. It takes a list as a parameter and it prints out each element of the list.
n = [3, 5, 7]
def print_list(x):
    for i in range(0, len(x)):
        print x[i]
return print_list(n)



Declare a function named print_list. It takes a list as a parameter and it prints out each element of the list.
Declare a function named reverse_list. It takes an array as a parameter and it returns the reverse of the array (use loops).
print(reverse_list([1, 2, 3, 4, 5]))
# [5, 4, 3, 2, 1]
print(reverse_list1(["A", "B", "C"]))
# ["C", "B", "A"]
Declare a function named capitalize_list_items. It takes a list as a parameter and it returns a capitalized list of items
Declare a function named add_item. It takes a list and an item parameters. It returns a list with the item added at the end.
food_staff = ['Potato', 'Tomato', 'Mango', 'Milk'];
print(add_item(food_staff, 'Meat'))     # ['Potato', 'Tomato', 'Mango', 'Milk','Meat'];
numbers = [2, 3, 7, 9];
print(add_item(numbers, 5))      [2, 3, 7, 9, 5]
Declare a function named remove_item. It takes a list and an item parameters. It returns a list with the item removed from it.
food_staff = ['Potato', 'Tomato', 'Mango', 'Milk'];
print(remove_item(food_staff, 'Mango'))  # ['Potato', 'Tomato', 'Milk'];
numbers = [2, 3, 7, 9];
print(remove_item(numbers, 3))  # [2, 7, 9]
Declare a function named sum_of_numbers. It takes a number parameter and it adds all the numbers in that range.
print(sum_of_numbers(5))  # 15
print(sum_all_numbers(10)) # 55
print(sum_all_numbers(100)) # 5050
Declare a function named sum_of_odds. It takes a number parameter and it adds all the odd numbers in that range.
Declare a function named sum_of_even. It takes a number parameter and it adds all the even numbers in that - range.
Exercises: Level 2
Declare a function named evens_and_odds . It takes a positive integer as parameter and it counts number of evens and odds in the number.
    print(evens_and_odds(100))
    # The number of odds are 50.
    # The number of evens are 51.
Call your function factorial, it takes a whole number as a parameter and it return a factorial of the number
Call your function is_empty, it takes a parameter and it checks if it is empty or not
Write different functions which take lists. They should calculate_mean, calculate_median, calculate_mode, calculate_range, calculate_variance, calculate_std (standard deviation).
Exercises: Level 3
Write a function called is_prime, which checks if a number is prime.
Write a functions which checks if all items are unique in the list.
Write a function which checks if all the items of the list are of the same data type.
Write a function which check if provided variable is a valid python variable
Go to the data folder and access the countries-data.py file.
Create a function called the most_spoken_languages in the world. It should return 10 or 20 most spoken languages in the world in descending order
Create a function called the most_populated_countries. It should return 10 or 20 most populated countries in descending order.