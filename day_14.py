# -*- coding: utf-8 -*-
"""day 14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tBTxzvc5pRhjtX3jDs5Edu0D0Gf2e5hB
"""

#Explain the difference between map, filter, and reduce.

#Map operation takes a mapping function and a vector of data as arguments and
# returns a new vector, which is the result of applying the mapping function on each element of the vector independently.

#The filter function operates on a list and returns a subset of that list after applying the filtering rule.

#Reduce
#The reduce function will transform a given list into a single value by applying a given function continuously to all the elements.
# It basically keeps operating on pairs of elements until there are no more elements left.


#Explain the difference between higher order function, closure and decorator

#Higher-order functions are just a function returning a function, or that takes a function as an argument. 
#Closures are used to preserve outer scope inside an inner scope. T

#Define a call function before map, filter or reduce, see examples.

#Use for loop to print each country in the countries list.

#Use for to print each name in the names list.

#Use for to print each number in the numbers list.

#Use map to create a new list by changing each country to uppercase in the countries list
#Use map to create a new list by changing each number to its square in the numbers list
#Use map to change each name to uppercase in the names list
#Use filter to filter out countries containing 'land'.
#Use filter to filter out countries having exactly six characters.
#Use filter to filter out countries containing six letters and more in the country list.
#Use filter to filter out countries starting with an 'E'
#Chain two or more list iterators (eg. arr.map(callback).filter(callback).reduce(callback))
#Declare a function called get_string_lists which takes a list as a parameter and then returns a list containing only string items.
#Use reduce to sum all the numbers in the numbers list.
#Use reduce to concatenate all the countries and to produce this sentence: Estonia, Finland, Sweden, Denmark, Norway, and Iceland are north European countries
#Declare a function called categorize_countries that returns a list of countries with some common pattern (you can find the countries list in this repository as countries.js(eg 'land', 'ia', 'island', 'stan')).
#Create a function returning a dictionary, where keys stand for starting letters of countries and values are the number of country names starting with that letter.
#Declare a get_first_ten_countries function - it returns a list of first ten countries from the countries.js list in the data folder.
#Declare a get_last_ten_countries function that returns the last ten countries in the countries list.

